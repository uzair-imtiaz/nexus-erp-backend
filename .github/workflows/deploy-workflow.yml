name: Build the image and Deploy on EC2

on:
  push:
    tags:
      - 'release-v-*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      PORT: ${{ secrets.PORT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Install dependencies
        run: pnpm install

      - name: Build project (without sourcemaps upload)
        run: pnpm build

      - name: Upload sourcemaps to Sentry
        run: pnpm sentry:sourcemaps
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nexus-erp-backend:latest
          build-args: |
            COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            PORT=${{ secrets.PORT }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/nexus-erp-backend:latest
            docker stop nexus-erp-backend || true
            docker rm nexus-erp-backend || true
            docker run -d --name nexus-erp-backend -p 80:80 \
              -e COOKIE_SECRET=${{ secrets.COOKIE_SECRET }} \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e NODE_ENV=${{ secrets.NODE_ENV }} \
              -e PORT=${{ secrets.PORT }} \
              -e REDIS_HOST=${{ secrets.REDIS_HOST }} \
              -e REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
              -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
              -e SENTRY_DSN=${{ secrets.SENTRY_DSN }} \
              ${{ secrets.DOCKER_USERNAME }}/nexus-erp-backend:latest
